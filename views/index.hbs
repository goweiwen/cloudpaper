<!doctype html>
<html>
  <head>
    <title>Chat</title>

    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; }
      form { background: #000; padding: 3px; position: absolute; right: 0; bottom: 0; width: 300px;}
      form input { border: 0; padding: 10px; width: 80%;}
      form button { width: 20%; background: rgb(130, 224, 255); border: none; padding: 10px;}
      #messages { list-style-type: none; margin: 0; padding: 0; float: right; width:300px; ;word-wrap: break-word;  overflow:hidden; overflow-y:auto; max-height: 500px; background-color: transparent;}
      #messages li { padding: 5px 10px; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
  </head>
  <body>
    <ul id="messages"></ul>
    <form action="">
      <input id="m" autocomplete="off" /><button>Send</button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
<script>
var socket = io();

var nickname = window.prompt("Enter your nick name.");

socket.emit('input name', nickname);

$('form').submit(function(){
  // Debugging Purposes Only
  console.log($('#m').val());

  if (($'#m').val() !== null || ($'#m').val() !== '') {
      socket.emit('chat message', $('#m').val());
      $('#m').val('');
      return true;
   } else {
     return false;
   }
});

  $('body').on('dragover', ev => {
    console.log('dragging over');
    ev.preventDefault();
  })

  $('body').on('drop', ev => {
    console.log('dropped');
    ev.preventDefault();
    console.log('supposed to upload now');
    var data = ev.originalEvent.target.files || (ev.originalEvent.dataTransfer && ev.originalEvent.dataTransfer.files);
    console.log(data);
    console.log('uploading file');
    socket.emit('upload file', data);
  });

socket.on('chat message', function(msg) {
  $('#messages').append($('<li>').text(msg));

    var n = $(document).height();
    // Debugging Purposes
    console.log(n);

    $('#messages').animate({ scrollTop: n }, 50);
});

var pdf = {};
socket.on('initialise', function(_pdf) {
  pdf = _pdf;
  for (let i in pdf) {
    pdf[i].pdfDoc = new PDFDoc(i, pdf[i].url, pdf[i].num);
    pdf[i].pdfDoc.setPosition(pdf[i].x, pdf[i].y);
    pdf[i].pdfDoc.setSocket(socket);
  }
});

</script>
<script src="index.js"></script>
  </body>
</html>
