<!doctype html>
<html>
  <head>
    <title>Chat</title>

    <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
      body { font: 13px Helvetica, Arial; overflow: hidden; }
      form { background: #ffffff; padding: 3px; position: absolute; right: 0; bottom: 0; width: 300px;}
      #messages { list-style-type: none; margin: 0; padding: 0; float: right; width:300px; ;word-wrap: break-word;  overflow:hidden; overflow-y:auto; max-height: 500px; background-color: transparent;}
      #messages li { padding: 5px 10px; background: #fff; }
      #messages li:nth-child(odd) { background: #eee; }
    </style>
    <!-- Compiled and minified CSS -->
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css">
     <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
     <!-- Compiled and minified JavaScript -->
     <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/js/materialize.min.js"></script>
  </head>
  <body>
    <ul id="messages" class="z-depth-3"></ul>
    <form class="white darken-3 z-depth-3" action="" padding="12px">
      <input id="m" class="" autocomplete="off" />
      <button class="waves-effect waves-light btn">
          Send <i class="material-icons right">send</i>
      </button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>

<script>
var socket = io();

var nickname = null;
while (nickname == null || nickname === '')
  nickname = window.prompt("Enter your nick name.");

socket.emit('input name', nickname);

$('form').submit(function(){
  // Debugging Purposes Only
  //console.log($('#m').val());

  if ($('#m').val() != null && $('#m').val() != '') {
      socket.emit('chat message', $('#m').val());
      $('#m').val('');
  }
  return false;
});

$('body').on('dragover', ev => {
  ev.preventDefault();
})

$('body').on('drop', ev => {
  ev.preventDefault();
  var data = ev.originalEvent.target.files || (ev.originalEvent.dataTransfer && ev.originalEvent.dataTransfer.files);
  socket.emit('upload file', data[0].name);
});

socket.on('chat message', function(msg) {
  if (msg != null && msg != '') {
    $('#messages').append($('<li>').text(msg));

    var n = $(document).height();
    // Debugging Purposes
    //console.log(n);s

    $('#messages').animate({ scrollTop: n }, 50);
  }
});

var pdf = {};
socket.on('initialise', function(_pdf) {
  console.log(_pdf)
  pdf = _pdf;
  for (let i in pdf) {
    pdf[i].pdfDoc = new PDFDoc(i, pdf[i].url, pdf[i].num);
    pdf[i].pdfDoc.setPosition(pdf[i].x, pdf[i].y);
    pdf[i].pdfDoc.setScale(pdf[i].scale);
    pdf[i].pdfDoc.setSocket(socket);
  }
});

</script>
<script src="index.js"></script>
  </body>
</html>
